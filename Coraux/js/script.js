document.addEventListener("DOMContentLoaded", () => {
  console.log("Script charg√© pour Les Coraux !");

  // 1. D√©filement fluide
  document.querySelectorAll('nav a').forEach(link => {
    link.addEventListener('click', e => {
      const href = link.getAttribute('href');
      if (href.startsWith('#')) {
        e.preventDefault();
        const target = document.querySelector(href);
        if (target) target.scrollIntoView({ behavior: 'smooth' });
      }
    });
  });

  // 2. Sticky header
  const header = document.querySelector('header');
  window.addEventListener('scroll', () => {
    header.classList.toggle('sticky', window.scrollY > 80);
  });

  // 3. Effet de frappe sur le titre
  const heroTitle = document.querySelector('main h2');
  if (heroTitle) {
    const text = heroTitle.textContent.trim();
    heroTitle.textContent = '';
    let i = 0;
    const interval = setInterval(() => {
      if (i < text.length) heroTitle.textContent += text[i++];
      else clearInterval(interval);
    }, 100);
  }



  // 5. Animation des sections au scroll
  const observer = new IntersectionObserver((entries, obs) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('reveal');
        obs.unobserve(entry.target);
      }
    });
  }, { threshold: 0.2 });

  document.querySelectorAll('main > *').forEach(el => {
    el.classList.add('hidden');
    observer.observe(el);
  });

  // 6. Accord√©ons dans le footer
  document.querySelectorAll('.footer-links h4').forEach(title => {
    title.style.cursor = 'pointer';
    const ul = title.nextElementSibling;
    ul.style.maxHeight = '0px';
    title.addEventListener('click', () => {
      const isOpen = ul.style.maxHeight !== '0px';
      ul.style.maxHeight = isOpen ? '0' : `${ul.scrollHeight}px`;
    });
  });

  // 7. Bouton mode sombre
  const themeBtn = document.createElement('button');
  themeBtn.id = 'theme-toggle';
  themeBtn.textContent = 'üåô';
  header.appendChild(themeBtn);
  themeBtn.addEventListener('click', () => {
    document.body.classList.toggle('dark-mode');
    themeBtn.textContent = document.body.classList.contains('dark-mode') ? '‚òÄÔ∏è' : 'üåô';
  });


  // 9. Surbrillance dynamique du lien actif
  const sections = document.querySelectorAll('main, section');
  const navLinks = document.querySelectorAll('nav a');
  window.addEventListener('scroll', () => {
    let current = '';
    sections.forEach(section => {
      const top = section.offsetTop - 100;
      if (scrollY >= top) {
        current = section.getAttribute('id');
      }
    });
    navLinks.forEach(link => {
      link.classList.remove('active');
      if (link.getAttribute('href') === '#' + current) {
        link.classList.add('active');
      }
    });
  });

  // 10. Zoom sur les images au survol
  document.querySelectorAll('img').forEach(img => {
    img.style.transition = 'transform 0.3s ease';
    img.addEventListener('mouseover', () => {
      img.style.transform = 'scale(1.05)';
    });
    img.addEventListener('mouseout', () => {
      img.style.transform = 'scale(1)';
    });
  });

  // 11. Message de bienvenue unique
  if (!localStorage.getItem('corauxVisited')) {
    alert('Bienvenue sur notre site d√©di√© aux coraux et √† la biodiversit√© marine !');
    localStorage.setItem('corauxVisited', 'true');
  }
});

////// NAVBAR ANIMATION

  const stickyNavbar = document.getElementById("sticky-navbar");
  const logo = document.querySelector(".logo");
  const headerLinks = document.querySelector(".header-links");

  window.addEventListener("scroll", () => {
    const scrollY = window.scrollY;

    // Afficher navbar fixe au-del√† de 500px
    if (scrollY > 500) {
      stickyNavbar.classList.add("visible");
    } else {
      stickyNavbar.classList.remove("visible");
    }

    // Animation progressive entre 0 et 500px
    const progress = Math.min(scrollY / 500, 1);

    // Logo r√©duit et se d√©place √† gauche
    if (logo) {
        logo.style.transform = `translate(${ -200 * progress }px, ${ 100 * progress }px) scale(${1 - 0.5 * progress})`;
      logo.style.opacity = `${1 - progress}`;
    }

    if (headerLinks) {
      headerLinks.style.transform = `translateX(${200 * progress}px)`;
      headerLinks.style.opacity = `${1 - progress}`;
    }
  });

function generateSmartResponse(input) {
  const smartResponses = {
    corail: [
      "Les coraux sont des animaux marins qui vivent en colonies.",
      "Les coraux construisent des r√©cifs en symbiose avec des algues.",
      "Ce sont des invert√©br√©s tr√®s sensibles aux changements environnementaux."
    ],
    blanchissement: [
      "Le blanchissement se produit quand les coraux expulsent leurs algues en cas de stress.",
      "C‚Äôest un ph√©nom√®ne caus√© par le r√©chauffement de l‚Äôeau.",
      "Sans leurs algues, les coraux perdent leur couleur et leur source d‚Äô√©nergie."
    ],
    biodiversit√©: [
      "Les r√©cifs coralliens abritent plus de 25 % de la biodiversit√© marine.",
      "On y trouve des milliers d‚Äôesp√®ces de poissons, invert√©br√©s et algues.",
      "Ils sont des r√©servoirs de vie marine tr√®s pr√©cieux."
    ],
    menace: [
      "Les coraux sont menac√©s par la pollution, la surp√™che et le r√©chauffement climatique.",
      "Le tourisme non contr√¥l√© ab√Æme aussi les r√©cifs.",
      "Les activit√©s humaines ont un impact direct sur la survie des coraux."
    ],
    protection: [
      "On peut prot√©ger les coraux par la cr√©ation d‚Äôaires marines prot√©g√©es.",
      "R√©duire les √©missions de CO‚ÇÇ est crucial pour limiter le r√©chauffement.",
      "La sensibilisation du public est essentielle pour leur pr√©servation."
    ]
  };

  input = input.toLowerCase();
  for (const topic in smartResponses) {
    if (input.includes(topic)) {
      const responses = smartResponses[topic];
      return responses[Math.floor(Math.random() * responses.length)];
    }
  }

  return "Je ne suis pas s√ªr de comprendre. Parlez-moi des coraux, du blanchissement ou de la biodiversit√©.";
}

// Chatbot DOM Elements
const chatbotInput = document.getElementById("chatbot-input");
const chatbotMessages = document.getElementById("chatbot-messages");

// Interaction utilisateur
if (chatbotInput && chatbotMessages) {
  chatbotInput.addEventListener("keydown", function (e) {
    if (e.key === "Enter" && chatbotInput.value.trim()) {
      const userMsg = chatbotInput.value.trim();
      appendChatMessage("Vous", userMsg);
      const reply = generateSmartResponse(userMsg);
      appendChatMessage("Bot", reply);
      chatbotInput.value = "";
    }
  });
}

// Fonction pour afficher un message dans la bo√Æte de chat
function appendChatMessage(sender, text) {
  const msg = document.createElement("div");
  msg.innerHTML = `<strong>${sender} :</strong> ${text}`;
  chatbotMessages.appendChild(msg);
  chatbotMessages.scrollTop = chatbotMessages.scrollHeight;
}



document.addEventListener("DOMContentLoaded", () => {
  const botImg = document.getElementById("bot-image");
  const chatbot = document.getElementById("chatbot");
  const closeBtn = document.getElementById("chatbot-close");

  if (botImg && chatbot && closeBtn) {
    botImg.addEventListener("click", () => {
      chatbot.classList.remove("hidden");
    });

    closeBtn.addEventListener("click", () => {
      chatbot.classList.add("hidden");
    });
  }
});


// ...existing code...

window.addEventListener('scroll', () => {
  if (window.scrollY > 500) {
    createBubble();
  }
});

function createBubble() {
  const container = document.getElementById('bubble-container');
  if (!container) return;
  const bubble = document.createElement('div');
  bubble.className = 'bubble';
  // Taille et position al√©atoires
  const size = Math.random() * 20 + 10;
  bubble.style.width = `${size}px`;
  bubble.style.height = `${size}px`;
  bubble.style.left = `${Math.random() * 98}vw`;
  bubble.style.background = `rgba(173,216,230,${Math.random() * 0.5 + 0.3})`;
  container.appendChild(bubble);
  // Supprime la bulle apr√®s l'animation
  bubble.addEventListener('animationend', () => bubble.remove());
}
// ...existing code...
    // Accord√©on FAQ
    document.querySelectorAll('.faq-question').forEach(btn => {
        btn.addEventListener('click', () => {
            const answer = btn.nextElementSibling;
            answer.classList.toggle('open');
            answer.style.display = answer.style.display === 'block' ? 'none' : 'block';
        });
    });
